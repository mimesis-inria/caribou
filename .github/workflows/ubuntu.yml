name: Linux

on:
  push:
    branches:
      - 'v22.06'

jobs:
  build:
    name: Building with ${{ matrix.sofa_version }}
    runs-on: ubuntu-20.04
    container: ${{ matrix.CONTAINER }}
    strategy:
      fail-fast: false
      matrix:
        sofa_version: [ v22.06.00 ]
        include:
          - sofa_version: v22.06.00
            SOFA_VERSION_I: 220600
            CONTAINER: jnbrunet/caribou-ubuntu-2004-builder:latest
            PYTHON_VERSION: 3.8
            PYBIND11_VERSION: 2.6
    env:
      SOFA_VERSION: ${{ matrix.sofa_version }}
      SOFA_ROOT: /opt/sofa
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: |
          git config --global user.email "caribou@github.com"
          git config --global user.name "Caribou Github"
          git fetch origin
          git rebase origin/master

      - name: Install pybind11
        if: ${{ matrix.PYBIND11_VERSION != '2.4' }}
        run: |
          git clone --depth 1 -b v${{ matrix.PYBIND11_VERSION }}  https://github.com/pybind/pybind11.git /tmp/pybind11
          cmake -GNinja -S/tmp/pybind11 -B/tmp/pybind11/build -DPYBIND11_TEST=OFF -DCMAKE_BUILD_TYPE=Release
          cmake --install /tmp/pybind11/build
          rm -rf /tmp/pybind11

      - name: Download SOFA Release
        run:  |
          curl --output sofa.zip -L "https://github.com/sofa-framework/sofa/releases/download/$SOFA_VERSION/SOFA_"$SOFA_VERSION"_Linux.zip"
              unzip sofa.zip -d temp
              mv temp/`ls temp` $SOFA_ROOT
      - name: Patch SOFA Release
        run: |
          sed -i "s|\${_IMPORT_PREFIX}/bin/runSofa-22.06.00|$SOFA_ROOT/bin/runSofa-22.06.00|" "$SOFA_ROOT/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets-minsizerel.cmake"
          sed -i "s|\${_IMPORT_PREFIX}/bin/runSofaGLFW-22.06.00|$SOFA_ROOT/bin/runSofa-22.06.00|" "$SOFA_ROOT/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets-minsizerel.cmake"

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.0
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: ccache cache files
        uses: actions/cache@v2
        if: ${{ always() }}
        with:
          path: .ccache
          key: ubuntu-ccache-${{ steps.time.outputs.time }}
          restore-keys: |
            ubuntu-ccache-

      - name: Build caribou
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
          PYTHONEXE: ${{ format('/usr/bin/python{0}', matrix.PYTHON_VERSION) }}
        run:
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE &&
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache &&
          ccache -z &&
          cmake
          -GNinja
          -DPYTHON_EXECUTABLE=$PYTHONEXE
          -DCMAKE_C_COMPILER_LAUNCHER=ccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCARIBOU_BUILD_TESTS=ON
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=SofaCaribou
          .
          && cmake --build . && cmake --install .
          && tar czvf SofaCaribou.tar.gz SofaCaribou
          && echo ${CCACHE_BASEDIR}
          && ccache -s

      - name: Archive production
        uses: actions/upload-artifact@v2
        with:
          name: caribou_${{ matrix.sofa_version }}
          path: SofaCaribou.tar.gz

  test:
    name: Testing with ${{ matrix.sofa_version }}
    needs: [build]
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    strategy:
      fail-fast: false
      matrix:
        sofa_version: [ v22.06.00 ]
        include:
          - sofa_version: v22.06.00
            PYTHON_VERSION: 3.8
            sofa_version_int: 220600
    env:
      SOFA_VERSION: ${{ matrix.sofa_version }}
      SOFA_ROOT: /opt/sofa
      CARIBOU_ROOT: /opt/sofa/plugins/SofaCaribou

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
               apt-get update
               apt-get -qq --no-install-recommends install \
                  libgl1-mesa-glx libglib2.0-0 libglx0 libopengl0 libharfbuzz0b libgomp1 curl ca-certificates unzip
               python -m pip install numpy meshio scipy

      - name: Install SOFA
        run: |
          if [ "$SOFA_VERSION" = "master" ]; then
              curl --output sofa.zip -L "https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries/lastStableBuild/CI_BRANCH=master,CI_SCOPE=standard/artifact/Linux/*zip*/Linux.zip"
              unzip sofa.zip -d temp
              mv temp/Linux/`ls temp/Linux` sofa.zip 
              rm -rf temp
              unzip sofa.zip -d temp
              mv temp/`ls temp` $SOFA_ROOT
          else
              curl --output sofa.zip -L "https://github.com/sofa-framework/sofa/releases/download/$SOFA_VERSION/SOFA_"$SOFA_VERSION"_Linux.zip"
              unzip sofa.zip -d temp
              mv temp/`ls temp` $SOFA_ROOT
          fi

      - name: Download caribou
        uses: actions/download-artifact@v2
        with:
          name: caribou_${{ matrix.sofa_version }}
          path: /tmp

      - name: Unpack caribou
        run: tar xzf /tmp/SofaCaribou.tar.gz -C /opt/sofa/plugins

      - name: Caribou.unittests.Geometry
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH="$SOFA_ROOT/lib:$LD_LIBRARY_PATH"
          $CARIBOU_ROOT/bin/Caribou.unittests.Geometry

      - name: Caribou.Geometry.PyTest
        if: ${{ always() }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$CARIBOU_ROOT/lib/python3/site-packages
          python $CARIBOU_ROOT/bin/pytest/Caribou_Geometry_Test.py


      - name: Caribou.unittests.Topology
        if: ${{ always() }}
        run: |
          [ "$SOFA_VERSION" = "v20.06.01" ] && export LD_LIBRARY_PATH="$SOFA_ROOT/lib:$LD_LIBRARY_PATH"
          $CARIBOU_ROOT/bin/Caribou.unittests.Topology

      - name: Caribou.Topology.PyTest
        if: ${{ always() }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$CARIBOU_ROOT/lib/python3/site-packages
          python $CARIBOU_ROOT/bin/pytest/Caribou_Topology_Test.py

      - name: Caribou.unittests.Mechanics
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH="$SOFA_ROOT/lib:$LD_LIBRARY_PATH"
          $CARIBOU_ROOT/bin/Caribou.unittests.Mechanics

      - name: Caribou.unittests.SofaCaribou
        if: ${{ always() }}
        run: |
            [ "$SOFA_VERSION" = "v20.06.01" ] && export LD_LIBRARY_PATH="$SOFA_ROOT/lib:$LD_LIBRARY_PATH"
            export LD_LIBRARY_PATH="$SOFA_ROOT/collections/SofaBaseMechanics/lib:$LD_LIBRARY_PATH"
            export LD_LIBRARY_PATH="$SOFA_ROOT/collections/SofaBaseUtils/lib:$LD_LIBRARY_PATH"
            $CARIBOU_ROOT/bin/Caribou.unittests.SofaCaribou

      - name: SofaCaribou.PyTest
        if: ${{ matrix.sofa_version_int >= '201200' }}
        run: |
            export PYTHONPATH=$PYTHONPATH:$CARIBOU_ROOT/lib/python3/site-packages:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages
            python $CARIBOU_ROOT/bin/pytest/SofaCaribou_Forcefield_HyperelasticForcefield.py
